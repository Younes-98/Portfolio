{"ast":null,"code":"import { useEffect, useRef } from 'react';\n\nfunction useEffectOnce(effect) {\n  const destroyFunc = useRef();\n  const calledOnce = useRef(false);\n  const renderAfterCalled = useRef(false);\n\n  if (calledOnce.current) {\n    renderAfterCalled.current = true;\n  }\n\n  useEffect(() => {\n    if (calledOnce.current) {\n      return;\n    }\n\n    calledOnce.current = true;\n    destroyFunc.current = effect();\n    return () => {\n      if (!renderAfterCalled.current) {\n        return;\n      }\n\n      if (destroyFunc.current) {\n        destroyFunc.current();\n      }\n    };\n  }, []);\n}\n\nexport default useEffectOnce;","map":{"version":3,"mappings":"AAAA,SAAyBA,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA6C;AAE3C,QAAMC,WAAW,GAAGH,MAAM,EAA1B;AACA,QAAMI,UAAU,GAAGJ,MAAM,CAAC,KAAD,CAAzB;AACA,QAAMK,iBAAiB,GAAGL,MAAM,CAAC,KAAD,CAAhC;;AAEA,MAAII,UAAU,CAACE,OAAf,EAAwB;AACtBD,qBAAiB,CAACC,OAAlB,GAA4B,IAA5B;AACD;;AAEDP,WAAS,CAAC,MAAK;AACb,QAAIK,UAAU,CAACE,OAAf,EAAwB;AACtB;AACD;;AAEDF,cAAU,CAACE,OAAX,GAAqB,IAArB;AACAH,eAAW,CAACG,OAAZ,GAAsBJ,MAAM,EAA5B;AAEA,WAAO,MAAK;AACV,UAAI,CAACG,iBAAiB,CAACC,OAAvB,EAAgC;AAC9B;AACD;;AAED,UAAIH,WAAW,CAACG,OAAhB,EAAyB;AACvBH,mBAAW,CAACG,OAAZ;AACD;AACF,KARD;AAUD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBD;;AAED,eAAeL,aAAf","names":["useEffect","useRef","useEffectOnce","effect","destroyFunc","calledOnce","renderAfterCalled","current"],"sources":["C:\\Users\\hp\\Desktop\\web\\Feedback-Hooks\\weath-er\\node_modules\\usehooks-ts\\src\\useEffectOnce\\useEffectOnce.ts"],"sourcesContent":["import { EffectCallback, useEffect, useRef } from 'react'\n\nfunction useEffectOnce(effect: EffectCallback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const destroyFunc = useRef<void | any>()\n  const calledOnce = useRef(false)\n  const renderAfterCalled = useRef(false)\n\n  if (calledOnce.current) {\n    renderAfterCalled.current = true\n  }\n\n  useEffect(() => {\n    if (calledOnce.current) {\n      return\n    }\n\n    calledOnce.current = true\n    destroyFunc.current = effect()\n\n    return () => {\n      if (!renderAfterCalled.current) {\n        return\n      }\n\n      if (destroyFunc.current) {\n        destroyFunc.current()\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n}\n\nexport default useEffectOnce\n"]},"metadata":{},"sourceType":"module"}